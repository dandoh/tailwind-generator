"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var fileName = "Classes.elm";
var generate = function (classes) {
    var elmify = function (_a) {
        var className = _a.className, name = _a.name;
        return "\n\n" + name + " : TailwindClass\n" + name + " =\n    TailwindClass \"" + className + "\"\n";
    };
    return "module Tailwind.Classes exposing (TailwindClass, tailwind, unwrap, " + classes
        .map(function (cl) { return cl.name; })
        .join(", ") + ")\n\n-- Generated by tailwind-generator, be careful when editing this file\n\nimport Html\nimport Html.Attributes as Attributes\nimport List\n\n\ntype TailwindClass\n    = TailwindClass String\n\n\nunwrap : List TailwindClass -> String\nunwrap cs =\n    cs |> List.map (\\(TailwindClass c) -> c) |> String.join \" \"\n\ntailwind : List TailwindClass -> Html.Attribute msg\ntailwind cs =\n    Attributes.class <| unwrap cs\n" + classes.map(elmify).join("") + "\n  ";
};
exports.save = function (dir, classes) {
    fs_1.default.writeFileSync(path_1.default.join(dir, fileName), generate(classes));
};
